base:
  config:
    nacos:
      hostname: 192.168.247.145
      port: 8848


spring:
  application:
    name: gateway
  main:
    allow-bean-definition-overriding: true
  cloud:
    nacos:
      discovery:
        server-addr: ${base.config.nacos.hostname}:${base.config.nacos.port}
    # 路由网关配置
    gateway:
      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true
      # 配置路由规则
      routes:
        # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        - id: BUSINESS-OAUTH2
          # 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
          uri: lb://business-auth-web
          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
          predicates:
            # 路径匹配，以 api 开头，直接配置是不生效的，看 filters 配置
            - Path=/api/auth/**
          filters:
            # 此处配置去掉 1 个路径前缀，再配置上面的 Path=/api/**，就能按照 http://localhost:8888/api/** 的方式访问了
            - StripPrefix=1

        - id: BUSINESS-SYSTEM
          uri: lb://business-system-web
          predicates:
            - Path=/api/system/**
          filters:
            - StripPrefix=1

        - id: BUSINESS-PIMS
          uri: lb://business-pims-web
          predicates:
            - Path=/api/pims/**
          filters:
            - StripPrefix=1

        - id: BUSINESS-WEBSOCKET
          uri: lb:ws://business-websocket
          predicates:
            - Path=/api/ws/**
          filters:
            - StripPrefix=1


server:
  port: 8081
  compression:
    enabled: true

# 配置日志级别，方别调试
logging:
  level:
    org.springframework.cloud.gateway: debug

management:
  endpoints:
    web:
      exposure:
        include: "*"
